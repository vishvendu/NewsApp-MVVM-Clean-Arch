// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.di.module;

import com.vishvendu.cleanarch.newsapp.utils.NetworkManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideNetworkManagerFactory implements Factory<NetworkManager> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideNetworkManagerFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public NetworkManager get() {
    return provideNetworkManager(module);
  }

  public static ApplicationModule_ProvideNetworkManagerFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideNetworkManagerFactory(module);
  }

  public static NetworkManager provideNetworkManager(ApplicationModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideNetworkManager());
  }
}
