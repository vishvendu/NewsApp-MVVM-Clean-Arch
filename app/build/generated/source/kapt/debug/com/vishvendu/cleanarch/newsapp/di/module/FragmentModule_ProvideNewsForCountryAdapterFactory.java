// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.di.module;

import com.vishvendu.cleanarch.newsapp.ui.adapter.NewsForCountryAdapter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentModule_ProvideNewsForCountryAdapterFactory implements Factory<NewsForCountryAdapter> {
  private final FragmentModule module;

  public FragmentModule_ProvideNewsForCountryAdapterFactory(FragmentModule module) {
    this.module = module;
  }

  @Override
  public NewsForCountryAdapter get() {
    return provideNewsForCountryAdapter(module);
  }

  public static FragmentModule_ProvideNewsForCountryAdapterFactory create(FragmentModule module) {
    return new FragmentModule_ProvideNewsForCountryAdapterFactory(module);
  }

  public static NewsForCountryAdapter provideNewsForCountryAdapter(FragmentModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideNewsForCountryAdapter());
  }
}
