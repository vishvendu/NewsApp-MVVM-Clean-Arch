// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.ui.fragment;

import com.vishvendu.cleanarch.newsapp.ui.adapter.SearchNewsAdapter;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.SearchNewsViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchNewsFragment_MembersInjector implements MembersInjector<SearchNewsFragment> {
  private final Provider<SearchNewsAdapter> adapterProvider;

  private final Provider<SearchNewsViewModel> searchNewsViewModelProvider;

  public SearchNewsFragment_MembersInjector(Provider<SearchNewsAdapter> adapterProvider,
      Provider<SearchNewsViewModel> searchNewsViewModelProvider) {
    this.adapterProvider = adapterProvider;
    this.searchNewsViewModelProvider = searchNewsViewModelProvider;
  }

  public static MembersInjector<SearchNewsFragment> create(
      Provider<SearchNewsAdapter> adapterProvider,
      Provider<SearchNewsViewModel> searchNewsViewModelProvider) {
    return new SearchNewsFragment_MembersInjector(adapterProvider, searchNewsViewModelProvider);
  }

  @Override
  public void injectMembers(SearchNewsFragment instance) {
    injectAdapter(instance, adapterProvider.get());
    injectSearchNewsViewModel(instance, searchNewsViewModelProvider.get());
  }

  @InjectedFieldSignature("com.vishvendu.cleanarch.newsapp.ui.fragment.SearchNewsFragment.adapter")
  public static void injectAdapter(SearchNewsFragment instance, SearchNewsAdapter adapter) {
    instance.adapter = adapter;
  }

  @InjectedFieldSignature("com.vishvendu.cleanarch.newsapp.ui.fragment.SearchNewsFragment.searchNewsViewModel")
  public static void injectSearchNewsViewModel(SearchNewsFragment instance,
      SearchNewsViewModel searchNewsViewModel) {
    instance.searchNewsViewModel = searchNewsViewModel;
  }
}
