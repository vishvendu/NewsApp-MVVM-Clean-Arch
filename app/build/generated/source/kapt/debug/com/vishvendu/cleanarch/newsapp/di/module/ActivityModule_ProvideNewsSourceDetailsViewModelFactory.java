// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.di.module;

import com.vishvendu.cleanarch.newsapp.data.repository.NewsSourceDetailsRepository;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.NewsSourceDetailsViewModel;
import com.vishvendu.cleanarch.newsapp.utils.DefaultDispatcherProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivityModule_ProvideNewsSourceDetailsViewModelFactory implements Factory<NewsSourceDetailsViewModel> {
  private final ActivityModule module;

  private final Provider<NewsSourceDetailsRepository> newsSourceDetailsRepositoryProvider;

  private final Provider<DefaultDispatcherProvider> dispatcherProvider;

  public ActivityModule_ProvideNewsSourceDetailsViewModelFactory(ActivityModule module,
      Provider<NewsSourceDetailsRepository> newsSourceDetailsRepositoryProvider,
      Provider<DefaultDispatcherProvider> dispatcherProvider) {
    this.module = module;
    this.newsSourceDetailsRepositoryProvider = newsSourceDetailsRepositoryProvider;
    this.dispatcherProvider = dispatcherProvider;
  }

  @Override
  public NewsSourceDetailsViewModel get() {
    return provideNewsSourceDetailsViewModel(module, newsSourceDetailsRepositoryProvider.get(), dispatcherProvider.get());
  }

  public static ActivityModule_ProvideNewsSourceDetailsViewModelFactory create(
      ActivityModule module,
      Provider<NewsSourceDetailsRepository> newsSourceDetailsRepositoryProvider,
      Provider<DefaultDispatcherProvider> dispatcherProvider) {
    return new ActivityModule_ProvideNewsSourceDetailsViewModelFactory(module, newsSourceDetailsRepositoryProvider, dispatcherProvider);
  }

  public static NewsSourceDetailsViewModel provideNewsSourceDetailsViewModel(
      ActivityModule instance, NewsSourceDetailsRepository newsSourceDetailsRepository,
      DefaultDispatcherProvider dispatcherProvider) {
    return Preconditions.checkNotNullFromProvides(instance.provideNewsSourceDetailsViewModel(newsSourceDetailsRepository, dispatcherProvider));
  }
}
