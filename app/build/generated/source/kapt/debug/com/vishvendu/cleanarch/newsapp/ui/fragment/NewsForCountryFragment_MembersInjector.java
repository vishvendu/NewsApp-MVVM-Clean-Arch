// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.ui.fragment;

import com.vishvendu.cleanarch.newsapp.ui.adapter.NewsForCountryAdapter;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.NewsForCountryViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsForCountryFragment_MembersInjector implements MembersInjector<NewsForCountryFragment> {
  private final Provider<NewsForCountryAdapter> adapterProvider;

  private final Provider<NewsForCountryViewModel> newsForCountryViewModelProvider;

  public NewsForCountryFragment_MembersInjector(Provider<NewsForCountryAdapter> adapterProvider,
      Provider<NewsForCountryViewModel> newsForCountryViewModelProvider) {
    this.adapterProvider = adapterProvider;
    this.newsForCountryViewModelProvider = newsForCountryViewModelProvider;
  }

  public static MembersInjector<NewsForCountryFragment> create(
      Provider<NewsForCountryAdapter> adapterProvider,
      Provider<NewsForCountryViewModel> newsForCountryViewModelProvider) {
    return new NewsForCountryFragment_MembersInjector(adapterProvider, newsForCountryViewModelProvider);
  }

  @Override
  public void injectMembers(NewsForCountryFragment instance) {
    injectAdapter(instance, adapterProvider.get());
    injectNewsForCountryViewModel(instance, newsForCountryViewModelProvider.get());
  }

  @InjectedFieldSignature("com.vishvendu.cleanarch.newsapp.ui.fragment.NewsForCountryFragment.adapter")
  public static void injectAdapter(NewsForCountryFragment instance, NewsForCountryAdapter adapter) {
    instance.adapter = adapter;
  }

  @InjectedFieldSignature("com.vishvendu.cleanarch.newsapp.ui.fragment.NewsForCountryFragment.newsForCountryViewModel")
  public static void injectNewsForCountryViewModel(NewsForCountryFragment instance,
      NewsForCountryViewModel newsForCountryViewModel) {
    instance.newsForCountryViewModel = newsForCountryViewModel;
  }
}
