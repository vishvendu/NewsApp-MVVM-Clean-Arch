// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.di.component;

import com.vishvendu.cleanarch.newsapp.data.repository.CountryListRepository;
import com.vishvendu.cleanarch.newsapp.data.repository.LanguageListRepository;
import com.vishvendu.cleanarch.newsapp.data.repository.NewsForCountryRepository;
import com.vishvendu.cleanarch.newsapp.data.repository.NewsInLanguageRepository;
import com.vishvendu.cleanarch.newsapp.data.repository.SearchNewsRepository;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideContextFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideCountryListAdapterFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideCountryListViewModelFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideDummiesAdapterFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideLanguageListAdapterFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideLanguageListViewModelFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideNewsForCountryAdapterFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideNewsForCountryViewModelFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideNewsInLanguageAdapterFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideNewsInLanguageViewModelFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideNewsListViewModelFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideNewsSourceAdapterFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideNewsSourceViewModelFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideSearchNewsAdapterFactory;
import com.vishvendu.cleanarch.newsapp.di.module.FragmentModule_ProvideSearchNewsViewModelFactory;
import com.vishvendu.cleanarch.newsapp.ui.fragment.CountryListFragment;
import com.vishvendu.cleanarch.newsapp.ui.fragment.CountryListFragment_MembersInjector;
import com.vishvendu.cleanarch.newsapp.ui.fragment.LanguageListFragment;
import com.vishvendu.cleanarch.newsapp.ui.fragment.LanguageListFragment_MembersInjector;
import com.vishvendu.cleanarch.newsapp.ui.fragment.NewsForCountryFragment;
import com.vishvendu.cleanarch.newsapp.ui.fragment.NewsForCountryFragment_MembersInjector;
import com.vishvendu.cleanarch.newsapp.ui.fragment.NewsInLanguageFragment;
import com.vishvendu.cleanarch.newsapp.ui.fragment.NewsInLanguageFragment_MembersInjector;
import com.vishvendu.cleanarch.newsapp.ui.fragment.NewsSourcesFragment;
import com.vishvendu.cleanarch.newsapp.ui.fragment.NewsSourcesFragment_MembersInjector;
import com.vishvendu.cleanarch.newsapp.ui.fragment.SearchNewsFragment;
import com.vishvendu.cleanarch.newsapp.ui.fragment.SearchNewsFragment_MembersInjector;
import com.vishvendu.cleanarch.newsapp.ui.fragment.TopHeadlinesFragment;
import com.vishvendu.cleanarch.newsapp.ui.fragment.TopHeadlinesFragment_MembersInjector;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.CountryListViewModel;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.LanguageListViewModel;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.NewsForCountryViewModel;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.NewsInLanguageViewModel;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.NewsSourcesViewModel;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.SearchNewsViewModel;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.TopHeadlinesViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerFragmentComponent {
  private DaggerFragmentComponent() {
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private FragmentModule fragmentModule;

    private ApplicationComponent applicationComponent;

    private Builder() {
    }

    public Builder fragmentModule(FragmentModule fragmentModule) {
      this.fragmentModule = Preconditions.checkNotNull(fragmentModule);
      return this;
    }

    public Builder applicationComponent(ApplicationComponent applicationComponent) {
      this.applicationComponent = Preconditions.checkNotNull(applicationComponent);
      return this;
    }

    public FragmentComponent build() {
      Preconditions.checkBuilderRequirement(fragmentModule, FragmentModule.class);
      Preconditions.checkBuilderRequirement(applicationComponent, ApplicationComponent.class);
      return new FragmentComponentImpl(fragmentModule, applicationComponent);
    }
  }

  private static final class FragmentComponentImpl implements FragmentComponent {
    private final FragmentModule fragmentModule;

    private final ApplicationComponent applicationComponent;

    private final FragmentComponentImpl fragmentComponentImpl = this;

    private FragmentComponentImpl(FragmentModule fragmentModuleParam,
        ApplicationComponent applicationComponentParam) {
      this.fragmentModule = fragmentModuleParam;
      this.applicationComponent = applicationComponentParam;

    }

    private CountryListRepository countryListRepository() {
      return new CountryListRepository(Preconditions.checkNotNullFromComponent(applicationComponent.getCountryJsonHelper()));
    }

    private CountryListViewModel countryListViewModel() {
      return FragmentModule_ProvideCountryListViewModelFactory.provideCountryListViewModel(fragmentModule, countryListRepository(), Preconditions.checkNotNullFromComponent(applicationComponent.getDispatcherProvider()));
    }

    private TopHeadlinesViewModel topHeadlinesViewModel() {
      return FragmentModule_ProvideNewsListViewModelFactory.provideNewsListViewModel(fragmentModule, Preconditions.checkNotNullFromComponent(applicationComponent.getTopHeadlineRepository()));
    }

    private NewsSourcesViewModel newsSourcesViewModel() {
      return FragmentModule_ProvideNewsSourceViewModelFactory.provideNewsSourceViewModel(fragmentModule, Preconditions.checkNotNullFromComponent(applicationComponent.getNewsSourcesRepository()), Preconditions.checkNotNullFromComponent(applicationComponent.getDispatcherProvider()));
    }

    private NewsForCountryRepository newsForCountryRepository() {
      return new NewsForCountryRepository(Preconditions.checkNotNullFromComponent(applicationComponent.getNetworkService()));
    }

    private NewsForCountryViewModel newsForCountryViewModel() {
      return FragmentModule_ProvideNewsForCountryViewModelFactory.provideNewsForCountryViewModel(fragmentModule, newsForCountryRepository(), Preconditions.checkNotNullFromComponent(applicationComponent.getDispatcherProvider()));
    }

    private LanguageListRepository languageListRepository() {
      return new LanguageListRepository(Preconditions.checkNotNullFromComponent(applicationComponent.getCountryJsonHelper()), FragmentModule_ProvideContextFactory.provideContext(fragmentModule));
    }

    private LanguageListViewModel languageListViewModel() {
      return FragmentModule_ProvideLanguageListViewModelFactory.provideLanguageListViewModel(fragmentModule, languageListRepository(), Preconditions.checkNotNullFromComponent(applicationComponent.getDispatcherProvider()));
    }

    private NewsInLanguageRepository newsInLanguageRepository() {
      return new NewsInLanguageRepository(Preconditions.checkNotNullFromComponent(applicationComponent.getNetworkService()));
    }

    private NewsInLanguageViewModel newsInLanguageViewModel() {
      return FragmentModule_ProvideNewsInLanguageViewModelFactory.provideNewsInLanguageViewModel(fragmentModule, newsInLanguageRepository(), Preconditions.checkNotNullFromComponent(applicationComponent.getDispatcherProvider()));
    }

    private SearchNewsRepository searchNewsRepository() {
      return new SearchNewsRepository(Preconditions.checkNotNullFromComponent(applicationComponent.getNetworkService()));
    }

    private SearchNewsViewModel searchNewsViewModel() {
      return FragmentModule_ProvideSearchNewsViewModelFactory.provideSearchNewsViewModel(fragmentModule, searchNewsRepository());
    }

    @Override
    public void inject(CountryListFragment fragment) {
      injectCountryListFragment(fragment);
    }

    @Override
    public void inject(TopHeadlinesFragment fragment) {
      injectTopHeadlinesFragment(fragment);
    }

    @Override
    public void inject(NewsSourcesFragment fragment) {
      injectNewsSourcesFragment(fragment);
    }

    @Override
    public void inject(NewsForCountryFragment fragment) {
      injectNewsForCountryFragment(fragment);
    }

    @Override
    public void inject(LanguageListFragment fragment) {
      injectLanguageListFragment(fragment);
    }

    @Override
    public void inject(NewsInLanguageFragment fragment) {
      injectNewsInLanguageFragment(fragment);
    }

    @Override
    public void inject(SearchNewsFragment fragment) {
      injectSearchNewsFragment(fragment);
    }

    private CountryListFragment injectCountryListFragment(CountryListFragment instance) {
      CountryListFragment_MembersInjector.injectAdapter(instance, FragmentModule_ProvideCountryListAdapterFactory.provideCountryListAdapter(fragmentModule));
      CountryListFragment_MembersInjector.injectCountryListViewModel(instance, countryListViewModel());
      return instance;
    }

    private TopHeadlinesFragment injectTopHeadlinesFragment(TopHeadlinesFragment instance) {
      TopHeadlinesFragment_MembersInjector.injectAdapter(instance, FragmentModule_ProvideDummiesAdapterFactory.provideDummiesAdapter(fragmentModule));
      TopHeadlinesFragment_MembersInjector.injectTopHeadlinesViewModel(instance, topHeadlinesViewModel());
      return instance;
    }

    private NewsSourcesFragment injectNewsSourcesFragment(NewsSourcesFragment instance) {
      NewsSourcesFragment_MembersInjector.injectAdapter(instance, FragmentModule_ProvideNewsSourceAdapterFactory.provideNewsSourceAdapter(fragmentModule));
      NewsSourcesFragment_MembersInjector.injectNewsSourcesViewModel(instance, newsSourcesViewModel());
      return instance;
    }

    private NewsForCountryFragment injectNewsForCountryFragment(NewsForCountryFragment instance) {
      NewsForCountryFragment_MembersInjector.injectAdapter(instance, FragmentModule_ProvideNewsForCountryAdapterFactory.provideNewsForCountryAdapter(fragmentModule));
      NewsForCountryFragment_MembersInjector.injectNewsForCountryViewModel(instance, newsForCountryViewModel());
      return instance;
    }

    private LanguageListFragment injectLanguageListFragment(LanguageListFragment instance) {
      LanguageListFragment_MembersInjector.injectAdapter(instance, FragmentModule_ProvideLanguageListAdapterFactory.provideLanguageListAdapter(fragmentModule));
      LanguageListFragment_MembersInjector.injectLanguageListViewModel(instance, languageListViewModel());
      return instance;
    }

    private NewsInLanguageFragment injectNewsInLanguageFragment(NewsInLanguageFragment instance) {
      NewsInLanguageFragment_MembersInjector.injectAdapter(instance, FragmentModule_ProvideNewsInLanguageAdapterFactory.provideNewsInLanguageAdapter(fragmentModule));
      NewsInLanguageFragment_MembersInjector.injectNewsInLanguageViewModel(instance, newsInLanguageViewModel());
      return instance;
    }

    private SearchNewsFragment injectSearchNewsFragment(SearchNewsFragment instance) {
      SearchNewsFragment_MembersInjector.injectAdapter(instance, FragmentModule_ProvideSearchNewsAdapterFactory.provideSearchNewsAdapter(fragmentModule));
      SearchNewsFragment_MembersInjector.injectSearchNewsViewModel(instance, searchNewsViewModel());
      return instance;
    }
  }
}
