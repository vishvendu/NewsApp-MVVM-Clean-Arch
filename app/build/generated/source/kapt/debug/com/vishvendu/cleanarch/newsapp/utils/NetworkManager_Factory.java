// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.utils;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("com.vishvendu.cleanarch.newsapp.di.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkManager_Factory implements Factory<NetworkManager> {
  private final Provider<Context> contextProvider;

  public NetworkManager_Factory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public NetworkManager get() {
    return newInstance(contextProvider.get());
  }

  public static NetworkManager_Factory create(Provider<Context> contextProvider) {
    return new NetworkManager_Factory(contextProvider);
  }

  public static NetworkManager newInstance(Context context) {
    return new NetworkManager(context);
  }
}
