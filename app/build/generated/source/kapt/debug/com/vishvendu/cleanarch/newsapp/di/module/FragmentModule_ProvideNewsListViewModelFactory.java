// Generated by Dagger (https://dagger.dev).
package com.vishvendu.cleanarch.newsapp.di.module;

import com.vishvendu.cleanarch.newsapp.data.repository.TopHeadlineRepository;
import com.vishvendu.cleanarch.newsapp.ui.viewmodel.TopHeadlinesViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentModule_ProvideNewsListViewModelFactory implements Factory<TopHeadlinesViewModel> {
  private final FragmentModule module;

  private final Provider<TopHeadlineRepository> topHeadlineRepositoryProvider;

  public FragmentModule_ProvideNewsListViewModelFactory(FragmentModule module,
      Provider<TopHeadlineRepository> topHeadlineRepositoryProvider) {
    this.module = module;
    this.topHeadlineRepositoryProvider = topHeadlineRepositoryProvider;
  }

  @Override
  public TopHeadlinesViewModel get() {
    return provideNewsListViewModel(module, topHeadlineRepositoryProvider.get());
  }

  public static FragmentModule_ProvideNewsListViewModelFactory create(FragmentModule module,
      Provider<TopHeadlineRepository> topHeadlineRepositoryProvider) {
    return new FragmentModule_ProvideNewsListViewModelFactory(module, topHeadlineRepositoryProvider);
  }

  public static TopHeadlinesViewModel provideNewsListViewModel(FragmentModule instance,
      TopHeadlineRepository topHeadlineRepository) {
    return Preconditions.checkNotNullFromProvides(instance.provideNewsListViewModel(topHeadlineRepository));
  }
}
